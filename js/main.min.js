const AUTHOR_NAME="Korosium";const EMBED_JS_FILE=[`<script defer src="data:text/javascript;base64,`,`"></script>`];const EMBED_CSS_FILE=[`<link rel="stylesheet" href="data:text/css;base64,`,`">`];const EMBED_FAVICON_FILE=[`<link rel="shortcut icon" href="`,`" type="image/x-icon">`];const EMBED_IMAGE_TAG_FILE=[`<img src="`,`" alt="`,`">`];const js_file_input=document.getElementById("js-file-input");js_file_input.onchange=()=>{const filename=js_file_input.files[0].name;const extension=filename.substring(filename.lastIndexOf("."));if(extension===".js"){minimize_js(js_file_input.files[0],filename);}else if(extension===".css"){minimize_css(js_file_input.files[0],filename);}else{minimize_image(js_file_input.files[0],filename);}};const minimize_js=(file,filename)=>{const fr=new FileReader();fr.readAsText(file);fr.onload=()=>{if(filename.indexOf(".min")===-1){const min_script=remove_unnecessary_spaces(remove_multi_spaces(keep_only_printable_ascii(remove_comments(fr.result))));const min_script_base64=EMBED_JS_FILE[0]+btoa(min_script)+EMBED_JS_FILE[1];download_text(min_script,generate_filename(filename,"min"));download_text(min_script_base64,generate_filename(filename,"embed",".txt"));}else{const min_script_base64=EMBED_JS_FILE[0]+btoa(keep_only_printable_ascii(fr.result))+EMBED_JS_FILE[1];download_text(min_script_base64,generate_filename(filename,"embed",".txt"));}};fr.onerror=()=>{console.log(fr.error);};};const minimize_css=(file,filename)=>{const fr=new FileReader();fr.readAsText(file);fr.onload=()=>{if(filename.indexOf(".min")===-1){const min_script=remove_unnecessary_spaces(remove_multi_spaces(keep_only_printable_ascii(remove_comments(fr.result))));const min_script_base64=EMBED_CSS_FILE[0]+btoa(fr.result)+EMBED_CSS_FILE[1];download_text(min_script,generate_filename(filename,"min"));download_text(min_script_base64,generate_filename(filename,"embed",".txt"));}else{const min_script_base64=EMBED_CSS_FILE[0]+btoa(keep_only_printable_ascii(fr.result))+EMBED_CSS_FILE[1];download_text(min_script_base64,generate_filename(filename,"embed",".txt"));}}};const minimize_image=(image,imagename)=>{const fr=new FileReader();fr.readAsDataURL(image);fr.onload=()=>{const favicon_base64=`${EMBED_FAVICON_FILE[0]}${fr.result}${EMBED_FAVICON_FILE[1]}`;const image_base64=`${EMBED_IMAGE_TAG_FILE[0]}${fr.result}${EMBED_IMAGE_TAG_FILE[1]}${imagename}${EMBED_IMAGE_TAG_FILE[2]}`;download_text(favicon_base64,generate_filename(imagename,"link",".txt"));download_text(image_base64,generate_filename(imagename,"image",".txt"));};fr.onerror=()=>{console.log(fr.error);};};const remove_comments=code=>{let retval="";let slashFound=false;let inDoubleSlashComment=false;let inLongComment=false;for(let i=0;i<code.length;i++){if(inDoubleSlashComment||inLongComment){if(code[i]==="\n"&&inDoubleSlashComment){inDoubleSlashComment=false;slashFound=false;}else if(code[i]==="*"&&!slashFound&&inLongComment){slashFound=true;}else if(code[i]==="/"&&slashFound&&inLongComment){inLongComment=false;slashFound=false;}else{slashFound=false;}}else{if(code[i]==="/"&&!slashFound){retval+=code[i];slashFound=true;}else if(code[i]==="/"&&slashFound){retval=retval.substring(0,retval.length-1);inDoubleSlashComment=true;slashFound=false;}else if(code[i]==="*"&&slashFound){retval=retval.substring(0,retval.length-1);inLongComment=true;slashFound=false;}else{retval+=code[i];slashFound=false;}}}return retval;};const keep_only_printable_ascii=code=>{let retval="";for(let i=0;i<code.length;i++){let n=code.charCodeAt(i);if(n>=32&&n<=126){retval+=code[i];}}return retval;};const remove_multi_spaces=code=>{let retval="";for(let i=0;i<code.length;i++){if(!(code[i]===" "&&code[i-1]===" ")){retval+=code[i];}}return retval;};const remove_unnecessary_spaces=code=>remove_spaces(remove_spaces(code,1),-1);const remove_spaces=(code,direction=1)=>{let retval="";let inString=false;let enterChar="";const stringStart=["\"", "\'", "\`"]; for (let i = 0; i < code.length; i++) { if (!inString && code[i] === " " && !is_alphanumeric(code[i + direction])) { i++; } if (stringStart.indexOf(code[i]) !== -1 && !inString) { enterChar = code[i]; inString = true; } else if (code[i] === enterChar) { enterChar = ""; inString = false; } retval += code[i]; } return retval;};const is_alphanumeric = c => { const n = c.toLowerCase().charCodeAt(); return n >= 97 && n <= 122 || n >= 48 && n <= 57;};const generate_filename = (filename, separator, extension = "") => { if (extension.length === 0) extension = filename.substring(filename.lastIndexOf(".")); return `${filename.substring(0, filename.lastIndexOf("."))}.${separator}${extension}`;};const download_text = (text, filename) => { let a = window.document.createElement('a'); a.href = window.URL.createObjectURL(new Blob([new TextEncoder().encode(text)])); a.download = filename; a.click(); URL.revokeObjectURL(a.href); a = null;};const init = () => { js_file_input.value = ""; document.getElementsByTagName("footer")[0].innerHTML += `<p>Copyright ${new Date().getFullYear()} ${AUTHOR_NAME}</p>`;};const main = () => { init();};window.onload = main;